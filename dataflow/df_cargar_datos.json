{
	"name": "df_cargar_datos",
	"properties": {
		"folder": {
			"name": "Bronze"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_datos01_csv",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "ds_datos02_csv",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_tabla_datos",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "ds_tabla_datos",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          FECHA_INICIO as string,",
				"          { FECHA_FIN} as string,",
				"          NUMERO as string,",
				"          IMEI as string,",
				"          RBS_UTILIZADA as string,",
				"          CELDA as string,",
				"          LATITUD_LONGITUD as string,",
				"          {DATOS_SUBIDOS(BYTES)} as string,",
				"          {DATOS_DESCARGADOS(BYTES)} as string,",
				"          {VOLUMEN_TOTAL(BYTES)} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          FECHA_INICIO as string,",
				"          { FECHA_FIN} as string,",
				"          NUMERO as string,",
				"          IMEI as string,",
				"          RBS_UTILIZADA as string,",
				"          CELDA as string,",
				"          LATITUD_LONGITUD as string,",
				"          {DATOS_SUBIDOS(BYTES)} as string,",
				"          {DATOS_DESCARGADOS(BYTES)} as string,",
				"          {VOLUMEN_TOTAL(BYTES)} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          FECHA_INICIO as string,",
				"          FECHA_FIN as string,",
				"          NUMERO as string,",
				"          IMEI as string,",
				"          RBS_UTILIZADA as string,",
				"          CELDA as string,",
				"          LATITUD_LONGITUD as string,",
				"          DATOS_SUBIDOS as string,",
				"          DATOS_DESCARGADOS as string,",
				"          VOLUMEN_TOTAL as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          FECHA_INICIO,",
				"          FECHA_FIN = { FECHA_FIN},",
				"          NUMERO,",
				"          IMEI,",
				"          RBS_UTILIZADA,",
				"          CELDA,",
				"          LATITUD_LONGITUD,",
				"          DATOS_SUBIDOS = {DATOS_SUBIDOS(BYTES)},",
				"          DATOS_DESCARGADOS = {DATOS_DESCARGADOS(BYTES)},",
				"          VOLUMEN_TOTAL = {VOLUMEN_TOTAL(BYTES)}",
				"     )) ~> sink1",
				"source2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          FECHA_INICIO as string,",
				"          FECHA_FIN as string,",
				"          NUMERO as string,",
				"          IMEI as string,",
				"          RBS_UTILIZADA as string,",
				"          CELDA as string,",
				"          LATITUD_LONGITUD as string,",
				"          DATOS_SUBIDOS as string,",
				"          DATOS_DESCARGADOS as string,",
				"          VOLUMEN_TOTAL as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          FECHA_INICIO,",
				"          FECHA_FIN = { FECHA_FIN},",
				"          NUMERO,",
				"          IMEI,",
				"          RBS_UTILIZADA,",
				"          CELDA,",
				"          LATITUD_LONGITUD,",
				"          DATOS_SUBIDOS = {DATOS_SUBIDOS(BYTES)},",
				"          DATOS_DESCARGADOS = {DATOS_DESCARGADOS(BYTES)},",
				"          VOLUMEN_TOTAL = {VOLUMEN_TOTAL(BYTES)}",
				"     )) ~> sink2"
			]
		}
	}
}