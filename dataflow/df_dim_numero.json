{
	"name": "df_dim_numero",
	"properties": {
		"folder": {
			"name": "Gold"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_silver_llamadas",
						"type": "DatasetReference"
					},
					"name": "datosA"
				},
				{
					"dataset": {
						"referenceName": "ds_silver_llamadas",
						"type": "DatasetReference"
					},
					"name": "datosB"
				},
				{
					"dataset": {
						"referenceName": "ds_silver_datos",
						"type": "DatasetReference"
					},
					"name": "datos"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_dim_numero",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "ds_dim_numero",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "ds_dim_numero",
						"type": "DatasetReference"
					},
					"name": "sink3"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          SERVICIO as string,",
				"          REGISTRO as string,",
				"          NUMERO_A as string,",
				"          IMEI_A as string,",
				"          RBS_UTILIZADA_A as string,",
				"          CELDA_A as string,",
				"          LATITUD_A as decimal(9,6),",
				"          LONGITUD_A as decimal(9,6),",
				"          NUMERO_B as string,",
				"          IMEI_B as string,",
				"          RBS_UTILIZADA_B as string,",
				"          CELDA_B as string,",
				"          LATITUD_B as decimal(9,6),",
				"          LONGITUD_B as decimal(9,6),",
				"          FECHA as timestamp,",
				"          DURACION as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT DISTINCT\\n    NUMERO_A AS numero,\\n    IMEI_A AS imei\\nFROM SILVER.llamadas\\nWHERE NUMERO_A IS NOT NULL',",
				"     format: 'query') ~> datosA",
				"source(output(",
				"          numero as string,",
				"          imei as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT DISTINCT\\n    NUMERO_B AS numero,\\n    IMEI_B AS imei\\nFROM SILVER.llamadas\\nWHERE NUMERO_B IS NOT NULL',",
				"     format: 'query') ~> datosB",
				"source(output(",
				"          numero as string,",
				"          imei as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT DISTINCT\\n    NUMERO AS numero,\\n    IMEI AS imei\\nFROM SILVER.datos\\nWHERE NUMERO IS NOT NULL',",
				"     format: 'query') ~> datos",
				"datosA sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id_numero as integer,",
				"          numero as string,",
				"          imei as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
				"datosB sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id_numero as integer,",
				"          numero as string,",
				"          imei as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          numero,",
				"          imei",
				"     )) ~> sink2",
				"datos sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id_numero as integer,",
				"          numero as string,",
				"          imei as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          numero,",
				"          imei",
				"     )) ~> sink3"
			]
		}
	}
}