{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-ucb-dw-entel-4536427"
		},
		"Is_sa_datos_entel_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Is_sa_datos_entel'"
		},
		"Is_sql_dw_entel_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Is_sql_dw_entel'"
		},
		"Is_sql_dw_entel_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sql-ucb-sisinfo-entel-delta.database.windows.net"
		},
		"Is_sql_dw_entel_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "dw_entel_delta"
		},
		"Is_sql_dw_entel_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "franklin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/cargar_bronze_datos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_cargar_datos",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_cargar_datos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Bronze"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_cargar_datos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cargar_bronze_llamadas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_cargar_llamadas",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_cargar_llamadas",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Bronze"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_cargar_llamadas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cargar_silver_datos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_limpiar_datos",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_limpiar_datos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"brzDatos": {},
									"silverDatos": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Silver"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_limpiar_datos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cargar_silver_llamadas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_limpiar_llamadas",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_limpiar_llamadas",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"brzLlamadas": {},
									"silverLlamadas": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Silver"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_limpiar_llamadas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datos01_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Is_sa_datos_entel",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Bronze"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dato01.csv",
						"container": "raw-entel"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FECHA_INICIO",
						"type": "String"
					},
					{
						"name": " FECHA_FIN",
						"type": "String"
					},
					{
						"name": "NUMERO",
						"type": "String"
					},
					{
						"name": "IMEI",
						"type": "String"
					},
					{
						"name": "RBS_UTILIZADA",
						"type": "String"
					},
					{
						"name": "CELDA",
						"type": "String"
					},
					{
						"name": "DATOS_SUBIDOS",
						"type": "String"
					},
					{
						"name": "DATOS_DESCARGADOS",
						"type": "String"
					},
					{
						"name": "VOLUMEN_TOTAL",
						"type": "String"
					},
					{
						"name": "LATITUD",
						"type": "String"
					},
					{
						"name": "LONGITUD",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Is_sa_datos_entel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datos02_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Is_sa_datos_entel",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Bronze"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dato02.csv",
						"container": "raw-entel"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FECHA_INICIO",
						"type": "String"
					},
					{
						"name": "FECHA_FIN",
						"type": "String"
					},
					{
						"name": "NUMERO",
						"type": "String"
					},
					{
						"name": "IMEI",
						"type": "String"
					},
					{
						"name": "RBS_UTILIZADA",
						"type": "String"
					},
					{
						"name": "CELDA",
						"type": "String"
					},
					{
						"name": "DATOS_SUBIDOS",
						"type": "String"
					},
					{
						"name": "DATOS_DESCARGADOS",
						"type": "String"
					},
					{
						"name": "VOLUMEN_TOTAL",
						"type": "String"
					},
					{
						"name": "LATITUD",
						"type": "String"
					},
					{
						"name": "LONGITUD",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Is_sa_datos_entel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dim_fecha')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Is_sql_dw_entel",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Gold"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_fecha",
						"type": "int",
						"precision": 10
					},
					{
						"name": "fecha",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "GOLD",
					"table": "dim_fecha"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Is_sql_dw_entel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dim_numero')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Is_sql_dw_entel",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Gold"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_numero",
						"type": "int",
						"precision": 10
					},
					{
						"name": "numero",
						"type": "nvarchar"
					},
					{
						"name": "imei",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "GOLD",
					"table": "dim_numero"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Is_sql_dw_entel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dim_radio_base')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Is_sql_dw_entel",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Gold"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_radio_base",
						"type": "int",
						"precision": 10
					},
					{
						"name": "radio_base",
						"type": "nvarchar"
					},
					{
						"name": "celda",
						"type": "nvarchar"
					},
					{
						"name": "latitud",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "longitud",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "GOLD",
					"table": "dim_radio_base"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Is_sql_dw_entel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dim_registro')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Is_sql_dw_entel",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Gold"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_registro",
						"type": "int",
						"precision": 10
					},
					{
						"name": "registro",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "GOLD",
					"table": "dim_registro"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Is_sql_dw_entel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dim_servicio')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Is_sql_dw_entel",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Gold"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_servicio",
						"type": "int",
						"precision": 10
					},
					{
						"name": "servicio",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "GOLD",
					"table": "dim_servicio"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Is_sql_dw_entel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_hechos_datos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Is_sql_dw_entel",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Gold"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_datos",
						"type": "int",
						"precision": 10
					},
					{
						"name": "subidos",
						"type": "int",
						"precision": 10
					},
					{
						"name": "descargador",
						"type": "int",
						"precision": 10
					},
					{
						"name": "total",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_fecha",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_numero",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_radio_base",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "GOLD",
					"table": "hechos_datos"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Is_sql_dw_entel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_hechos_llamadas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Is_sql_dw_entel",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Gold"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_llamadas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "duracion",
						"type": "time",
						"scale": 7
					},
					{
						"name": "id_servicio",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_registro",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_numero_a",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_radio_base_a",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_numero_b",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_radio_base_b",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_fecha",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "GOLD",
					"table": "hechos_llamadas"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Is_sql_dw_entel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_llamadas_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Is_sa_datos_entel",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Bronze"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "llamadas.csv",
						"container": "raw-entel"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SERVICIO",
						"type": "String"
					},
					{
						"name": "REGISTRO",
						"type": "String"
					},
					{
						"name": "NUMERO_A",
						"type": "String"
					},
					{
						"name": "IMEI_A",
						"type": "String"
					},
					{
						"name": "RBS_UTILIZADA_A",
						"type": "String"
					},
					{
						"name": "CELDA_A",
						"type": "String"
					},
					{
						"name": "LATITUD_LONGITUD_A",
						"type": "String"
					},
					{
						"name": "NUMERO_B",
						"type": "String"
					},
					{
						"name": "IMEI_B",
						"type": "String"
					},
					{
						"name": "RBS_UTILIZADA_B",
						"type": "String"
					},
					{
						"name": "CELDA_B",
						"type": "String"
					},
					{
						"name": "LATITUD_LONGITUD_B",
						"type": "String"
					},
					{
						"name": "FECHA",
						"type": "String"
					},
					{
						"name": "DURACION",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Is_sa_datos_entel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_silver_datos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Is_sql_dw_entel",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Silver"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "FECHA_INICIO",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "FECHA_FIN",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "NUMERO",
						"type": "nvarchar"
					},
					{
						"name": "IMEI",
						"type": "nvarchar"
					},
					{
						"name": "RBS_UTILIZADA",
						"type": "nvarchar"
					},
					{
						"name": "CELDA",
						"type": "nvarchar"
					},
					{
						"name": "LATITUD",
						"type": "decimal",
						"precision": 9,
						"scale": 6
					},
					{
						"name": "LONGITUD",
						"type": "decimal",
						"precision": 9,
						"scale": 6
					},
					{
						"name": "DATOS_SUBIDOS",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATOS_DESCARGADOS",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VOLUMEN_TOTAL",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "SILVER",
					"table": "datos"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Is_sql_dw_entel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_silver_llamadas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Is_sql_dw_entel",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Silver"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SERVICIO",
						"type": "nvarchar"
					},
					{
						"name": "REGISTRO",
						"type": "nvarchar"
					},
					{
						"name": "NUMERO_A",
						"type": "nvarchar"
					},
					{
						"name": "IMEI_A",
						"type": "nvarchar"
					},
					{
						"name": "RBS_UTILIZADA_A",
						"type": "nvarchar"
					},
					{
						"name": "CELDA_A",
						"type": "nvarchar"
					},
					{
						"name": "LATITUD_A",
						"type": "decimal",
						"precision": 9,
						"scale": 6
					},
					{
						"name": "LONGITUD_A",
						"type": "decimal",
						"precision": 9,
						"scale": 6
					},
					{
						"name": "NUMERO_B",
						"type": "nvarchar"
					},
					{
						"name": "IMEI_B",
						"type": "nvarchar"
					},
					{
						"name": "RBS_UTILIZADA_B",
						"type": "nvarchar"
					},
					{
						"name": "CELDA_B",
						"type": "nvarchar"
					},
					{
						"name": "LATITUD_B",
						"type": "decimal",
						"precision": 9,
						"scale": 6
					},
					{
						"name": "LONGITUD_B",
						"type": "decimal",
						"precision": 9,
						"scale": 6
					},
					{
						"name": "FECHA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DURACION",
						"type": "time",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "SILVER",
					"table": "llamadas"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Is_sql_dw_entel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_tabla_datos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Is_sql_dw_entel",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Bronze"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "FECHA_INICIO",
						"type": "varchar"
					},
					{
						"name": "FECHA_FIN",
						"type": "varchar"
					},
					{
						"name": "NUMERO",
						"type": "varchar"
					},
					{
						"name": "IMEI",
						"type": "varchar"
					},
					{
						"name": "RBS_UTILIZADA",
						"type": "varchar"
					},
					{
						"name": "CELDA",
						"type": "varchar"
					},
					{
						"name": "LATITUD",
						"type": "varchar"
					},
					{
						"name": "LONGITUD",
						"type": "varchar"
					},
					{
						"name": "DATOS_SUBIDOS",
						"type": "varchar"
					},
					{
						"name": "DATOS_DESCARGADOS",
						"type": "varchar"
					},
					{
						"name": "VOLUMEN_TOTAL",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "BRONZE",
					"table": "datos"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Is_sql_dw_entel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_tabla_llamadas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Is_sql_dw_entel",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Bronze"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SERVICIO",
						"type": "varchar"
					},
					{
						"name": "REGISTRO",
						"type": "varchar"
					},
					{
						"name": "NUMERO_A",
						"type": "varchar"
					},
					{
						"name": "IMEI_A",
						"type": "varchar"
					},
					{
						"name": "RBS_UTILIZADA_A",
						"type": "varchar"
					},
					{
						"name": "CELDA_A",
						"type": "varchar"
					},
					{
						"name": "LATITUD_LONGITUD_A",
						"type": "varchar"
					},
					{
						"name": "NUMERO_B",
						"type": "varchar"
					},
					{
						"name": "IMEI_B",
						"type": "varchar"
					},
					{
						"name": "RBS_UTILIZADA_B",
						"type": "varchar"
					},
					{
						"name": "CELDA_B",
						"type": "varchar"
					},
					{
						"name": "LATITUD_LONGITUD_B",
						"type": "varchar"
					},
					{
						"name": "FECHA",
						"type": "varchar"
					},
					{
						"name": "DURACION",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "BRONZE",
					"table": "llamadas"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Is_sql_dw_entel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Is_sa_datos_entel')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Is_sa_datos_entel_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Is_sql_dw_entel')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('Is_sql_dw_entel_properties_typeProperties_server')]",
					"database": "[parameters('Is_sql_dw_entel_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Is_sql_dw_entel_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Is_sql_dw_entel_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_cargar_datos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Bronze"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_datos01_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "ds_datos02_csv",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_tabla_datos",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "ds_tabla_datos",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          FECHA_INICIO as string,",
						"          { FECHA_FIN} as string,",
						"          NUMERO as string,",
						"          IMEI as string,",
						"          RBS_UTILIZADA as string,",
						"          CELDA as string,",
						"          DATOS_SUBIDOS as string,",
						"          DATOS_DESCARGADOS as string,",
						"          VOLUMEN_TOTAL as string,",
						"          LATITUD as string,",
						"          LONGITUD as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source(output(",
						"          FECHA_INICIO as string,",
						"          FECHA_FIN as string,",
						"          NUMERO as string,",
						"          IMEI as string,",
						"          RBS_UTILIZADA as string,",
						"          CELDA as string,",
						"          DATOS_SUBIDOS as string,",
						"          DATOS_DESCARGADOS as string,",
						"          VOLUMEN_TOTAL as string,",
						"          LATITUD as string,",
						"          LONGITUD as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source2",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          FECHA_INICIO as string,",
						"          FECHA_FIN as string,",
						"          NUMERO as string,",
						"          IMEI as string,",
						"          RBS_UTILIZADA as string,",
						"          CELDA as string,",
						"          LATITUD as string,",
						"          LONGITUD as string,",
						"          DATOS_SUBIDOS as string,",
						"          DATOS_DESCARGADOS as string,",
						"          VOLUMEN_TOTAL as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          FECHA_INICIO,",
						"          FECHA_FIN = { FECHA_FIN},",
						"          NUMERO,",
						"          IMEI,",
						"          RBS_UTILIZADA,",
						"          CELDA,",
						"          LATITUD,",
						"          LONGITUD,",
						"          DATOS_SUBIDOS,",
						"          DATOS_DESCARGADOS,",
						"          VOLUMEN_TOTAL",
						"     )) ~> sink1",
						"source2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          FECHA_INICIO as string,",
						"          FECHA_FIN as string,",
						"          NUMERO as string,",
						"          IMEI as string,",
						"          RBS_UTILIZADA as string,",
						"          CELDA as string,",
						"          LATITUD as string,",
						"          LONGITUD as string,",
						"          DATOS_SUBIDOS as string,",
						"          DATOS_DESCARGADOS as string,",
						"          VOLUMEN_TOTAL as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          FECHA_INICIO,",
						"          FECHA_FIN,",
						"          NUMERO,",
						"          IMEI,",
						"          RBS_UTILIZADA,",
						"          CELDA,",
						"          LATITUD,",
						"          LONGITUD,",
						"          DATOS_SUBIDOS,",
						"          DATOS_DESCARGADOS,",
						"          VOLUMEN_TOTAL",
						"     )) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datos01_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_datos02_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_tabla_datos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_cargar_llamadas')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Bronze"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_llamadas_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_tabla_llamadas",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          SERVICIO as string,",
						"          REGISTRO as string,",
						"          NUMERO_A as string,",
						"          IMEI_A as string,",
						"          RBS_UTILIZADA_A as string,",
						"          CELDA_A as string,",
						"          LATITUD_LONGITUD_A as string,",
						"          NUMERO_B as string,",
						"          IMEI_B as string,",
						"          RBS_UTILIZADA_B as string,",
						"          CELDA_B as string,",
						"          LATITUD_LONGITUD_B as string,",
						"          FECHA as string,",
						"          DURACION as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          SERVICIO as string,",
						"          REGISTRO as string,",
						"          NUMERO_A as string,",
						"          IMEI_A as string,",
						"          RBS_UTILIZADA_A as string,",
						"          CELDA_A as string,",
						"          LATITUD_LONGITUD_A as string,",
						"          NUMERO_B as string,",
						"          IMEI_B as string,",
						"          RBS_UTILIZADA_B as string,",
						"          CELDA_B as string,",
						"          LATITUD_LONGITUD_B as string,",
						"          FECHA as string,",
						"          DURACION as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          SERVICIO,",
						"          REGISTRO,",
						"          NUMERO_A,",
						"          IMEI_A,",
						"          RBS_UTILIZADA_A,",
						"          CELDA_A,",
						"          LATITUD_LONGITUD_A,",
						"          NUMERO_B,",
						"          IMEI_B,",
						"          RBS_UTILIZADA_B,",
						"          CELDA_B,",
						"          LATITUD_LONGITUD_B,",
						"          FECHA,",
						"          DURACION",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_llamadas_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_tabla_llamadas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_dim_fecha')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Gold"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_silver_datos",
								"type": "DatasetReference"
							},
							"name": "datosFin"
						},
						{
							"dataset": {
								"referenceName": "ds_silver_llamadas",
								"type": "DatasetReference"
							},
							"name": "silverLlamadas"
						},
						{
							"dataset": {
								"referenceName": "ds_silver_datos",
								"type": "DatasetReference"
							},
							"name": "datosInicio"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_dim_fecha",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "ds_dim_fecha",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "ds_dim_fecha",
								"type": "DatasetReference"
							},
							"name": "sink3"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          fecha as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT DISTINCT FECHA_FIN AS fecha\\nFROM SILVER.datos\\nWHERE FECHA_FIN IS NOT NULL',",
						"     format: 'query') ~> datosFin",
						"source(output(",
						"          fecha as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT DISTINCT FECHA AS fecha\\nFROM SILVER.llamadas\\nWHERE FECHA IS NOT NULL',",
						"     format: 'query') ~> silverLlamadas",
						"source(output(",
						"          fecha as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT DISTINCT FECHA_INICIO AS fecha\\nFROM SILVER.datos\\nWHERE FECHA_INICIO IS NOT NULL',",
						"     format: 'query') ~> datosInicio",
						"datosFin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_fecha as integer,",
						"          fecha as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          fecha",
						"     )) ~> sink1",
						"silverLlamadas sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_fecha as integer,",
						"          fecha as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          fecha",
						"     )) ~> sink2",
						"datosInicio sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_fecha as integer,",
						"          fecha as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          fecha",
						"     )) ~> sink3"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_silver_datos')]",
				"[concat(variables('factoryId'), '/datasets/ds_silver_llamadas')]",
				"[concat(variables('factoryId'), '/datasets/ds_dim_fecha')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_dim_numero')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Gold"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_silver_llamadas",
								"type": "DatasetReference"
							},
							"name": "datosA"
						},
						{
							"dataset": {
								"referenceName": "ds_silver_llamadas",
								"type": "DatasetReference"
							},
							"name": "datosB"
						},
						{
							"dataset": {
								"referenceName": "ds_silver_datos",
								"type": "DatasetReference"
							},
							"name": "datos"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_dim_numero",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "ds_dim_numero",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "ds_dim_numero",
								"type": "DatasetReference"
							},
							"name": "sink3"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          SERVICIO as string,",
						"          REGISTRO as string,",
						"          NUMERO_A as string,",
						"          IMEI_A as string,",
						"          RBS_UTILIZADA_A as string,",
						"          CELDA_A as string,",
						"          LATITUD_A as decimal(9,6),",
						"          LONGITUD_A as decimal(9,6),",
						"          NUMERO_B as string,",
						"          IMEI_B as string,",
						"          RBS_UTILIZADA_B as string,",
						"          CELDA_B as string,",
						"          LATITUD_B as decimal(9,6),",
						"          LONGITUD_B as decimal(9,6),",
						"          FECHA as timestamp,",
						"          DURACION as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT DISTINCT\\n    NUMERO_A AS numero,\\n    IMEI_A AS imei\\nFROM SILVER.llamadas\\nWHERE NUMERO_A IS NOT NULL',",
						"     format: 'query') ~> datosA",
						"source(output(",
						"          numero as string,",
						"          imei as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT DISTINCT\\n    NUMERO_B AS numero,\\n    IMEI_B AS imei\\nFROM SILVER.llamadas\\nWHERE NUMERO_B IS NOT NULL',",
						"     format: 'query') ~> datosB",
						"source(output(",
						"          numero as string,",
						"          imei as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT DISTINCT\\n    NUMERO AS numero,\\n    IMEI AS imei\\nFROM SILVER.datos\\nWHERE NUMERO IS NOT NULL',",
						"     format: 'query') ~> datos",
						"datosA sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_numero as integer,",
						"          numero as string,",
						"          imei as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
						"datosB sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_numero as integer,",
						"          numero as string,",
						"          imei as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          numero,",
						"          imei",
						"     )) ~> sink2",
						"datos sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_numero as integer,",
						"          numero as string,",
						"          imei as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          numero,",
						"          imei",
						"     )) ~> sink3"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_silver_llamadas')]",
				"[concat(variables('factoryId'), '/datasets/ds_silver_datos')]",
				"[concat(variables('factoryId'), '/datasets/ds_dim_numero')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_dim_radiobase')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Gold"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_silver_llamadas",
								"type": "DatasetReference"
							},
							"name": "sourceA"
						},
						{
							"dataset": {
								"referenceName": "ds_silver_llamadas",
								"type": "DatasetReference"
							},
							"name": "sourceB"
						},
						{
							"dataset": {
								"referenceName": "ds_silver_datos",
								"type": "DatasetReference"
							},
							"name": "sourceDatos"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_dim_radio_base",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "ds_dim_radio_base",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "ds_dim_radio_base",
								"type": "DatasetReference"
							},
							"name": "sink3"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          radio_base as string,",
						"          celda as string,",
						"          latitud as decimal(9,6),",
						"          longitud as decimal(9,6)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT DISTINCT\\n    RBS_UTILIZADA_A AS radio_base,\\n    CELDA_A AS celda,\\n    LATITUD_A AS latitud,\\n    LONGITUD_A AS longitud\\nFROM SILVER.llamadas\\nWHERE RBS_UTILIZADA_A IS NOT NULL',",
						"     format: 'query') ~> sourceA",
						"source(output(",
						"          radio_base as string,",
						"          celda as string,",
						"          latitud as decimal(9,6),",
						"          longitud as decimal(9,6)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT DISTINCT\\n    RBS_UTILIZADA_B AS radio_base,\\n    CELDA_B AS celda,\\n    LATITUD_B AS latitud,\\n    LONGITUD_B AS longitud\\nFROM SILVER.llamadas\\nWHERE RBS_UTILIZADA_B IS NOT NULL',",
						"     format: 'query') ~> sourceB",
						"source(output(",
						"          radio_base as string,",
						"          celda as string,",
						"          latitud as decimal(9,6),",
						"          longitud as decimal(9,6)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT DISTINCT\\n    RBS_UTILIZADA AS radio_base,\\n    CELDA AS celda,\\n    LATITUD AS latitud,\\n    LONGITUD AS longitud\\nFROM SILVER.datos\\nWHERE RBS_UTILIZADA IS NOT NULL',",
						"     format: 'query') ~> sourceDatos",
						"sourceA sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_radio_base as integer,",
						"          radio_base as string,",
						"          celda as string,",
						"          latitud as decimal(18,0),",
						"          longitud as decimal(18,0)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          radio_base,",
						"          celda,",
						"          latitud,",
						"          longitud",
						"     )) ~> sink1",
						"sourceB sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_radio_base as integer,",
						"          radio_base as string,",
						"          celda as string,",
						"          latitud as decimal(18,0),",
						"          longitud as decimal(18,0)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          radio_base,",
						"          celda,",
						"          latitud,",
						"          longitud",
						"     )) ~> sink2",
						"sourceDatos sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_radio_base as integer,",
						"          radio_base as string,",
						"          celda as string,",
						"          latitud as decimal(18,0),",
						"          longitud as decimal(18,0)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          radio_base,",
						"          celda,",
						"          latitud,",
						"          longitud",
						"     )) ~> sink3"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_silver_llamadas')]",
				"[concat(variables('factoryId'), '/datasets/ds_silver_datos')]",
				"[concat(variables('factoryId'), '/datasets/ds_dim_radio_base')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_limpiar_datos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Silver"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_tabla_datos",
								"type": "DatasetReference"
							},
							"name": "brzDatos"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_silver_datos",
								"type": "DatasetReference"
							},
							"name": "silverDatos"
						}
					],
					"transformations": [
						{
							"name": "subidos"
						},
						{
							"name": "descargados"
						},
						{
							"name": "total"
						},
						{
							"name": "lat"
						},
						{
							"name": "long"
						},
						{
							"name": "fechaInicio"
						},
						{
							"name": "fechaFin"
						}
					],
					"scriptLines": [
						"source(output(",
						"          FECHA_INICIO as string,",
						"          FECHA_FIN as string,",
						"          NUMERO as string,",
						"          IMEI as string,",
						"          RBS_UTILIZADA as string,",
						"          CELDA as string,",
						"          LATITUD as string,",
						"          LONGITUD as string,",
						"          DATOS_SUBIDOS as string,",
						"          DATOS_DESCARGADOS as string,",
						"          VOLUMEN_TOTAL as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> brzDatos",
						"brzDatos cast(output(",
						"          DATOS_SUBIDOS as integer",
						"     ),",
						"     errors: true) ~> subidos",
						"subidos cast(output(",
						"          DATOS_DESCARGADOS as integer",
						"     ),",
						"     errors: true) ~> descargados",
						"descargados cast(output(",
						"          VOLUMEN_TOTAL as integer",
						"     ),",
						"     errors: true) ~> total",
						"fechaFin cast(output(",
						"          LATITUD as double",
						"     ),",
						"     errors: true) ~> lat",
						"lat cast(output(",
						"          LONGITUD as double",
						"     ),",
						"     errors: true) ~> long",
						"total derive(F_INICIO_LIMPIO = toTimestamp(FECHA_INICIO, 'dd-MM-yyyy HH:mm:ss')) ~> fechaInicio",
						"fechaInicio derive(F_FIN_LIMPIO = toTimestamp(FECHA_FIN, 'dd-MM-yyyy HH:mm:ss')) ~> fechaFin",
						"long sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          FECHA_INICIO as timestamp,",
						"          FECHA_FIN as timestamp,",
						"          NUMERO as string,",
						"          IMEI as string,",
						"          RBS_UTILIZADA as string,",
						"          CELDA as string,",
						"          LATITUD as decimal(9,6),",
						"          LONGITUD as decimal(9,6),",
						"          DATOS_SUBIDOS as integer,",
						"          DATOS_DESCARGADOS as integer,",
						"          VOLUMEN_TOTAL as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          FECHA_INICIO = F_INICIO_LIMPIO,",
						"          FECHA_FIN = F_FIN_LIMPIO,",
						"          NUMERO,",
						"          IMEI,",
						"          RBS_UTILIZADA,",
						"          CELDA,",
						"          LATITUD,",
						"          LONGITUD,",
						"          DATOS_SUBIDOS,",
						"          DATOS_DESCARGADOS,",
						"          VOLUMEN_TOTAL",
						"     )) ~> silverDatos"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_tabla_datos')]",
				"[concat(variables('factoryId'), '/datasets/ds_silver_datos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_limpiar_llamadas')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Silver"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_tabla_llamadas",
								"type": "DatasetReference"
							},
							"name": "brzLlamadas"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_silver_llamadas",
								"type": "DatasetReference"
							},
							"name": "silverLlamadas"
						}
					],
					"transformations": [
						{
							"name": "duracion"
						},
						{
							"name": "latitudlongitudA",
							"description": "separar latitud y altitud A"
						},
						{
							"name": "latlongB",
							"description": "separar latitud y longitud B"
						},
						{
							"name": "fecha"
						}
					],
					"scriptLines": [
						"source(output(",
						"          SERVICIO as string,",
						"          REGISTRO as string,",
						"          NUMERO_A as string,",
						"          IMEI_A as string,",
						"          RBS_UTILIZADA_A as string,",
						"          CELDA_A as string,",
						"          LATITUD_LONGITUD_A as string,",
						"          NUMERO_B as string,",
						"          IMEI_B as string,",
						"          RBS_UTILIZADA_B as string,",
						"          CELDA_B as string,",
						"          LATITUD_LONGITUD_B as string,",
						"          FECHA as string,",
						"          DURACION as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> brzLlamadas",
						"fecha cast(output(",
						"          DURACION as timestamp 'HH:mm:ss'",
						"     ),",
						"     errors: true) ~> duracion",
						"duracion derive(LATITUD_A = toDouble(split(LATITUD_LONGITUD_A, ',')[1]),",
						"          LONGITUD_A = toDouble(split(LATITUD_LONGITUD_A, ',')[2])) ~> latitudlongitudA",
						"latitudlongitudA derive(LATITUD_B = toDecimal(split(LATITUD_LONGITUD_B, ',')[1], 9, 6),",
						"          LONGITUD_B = toDecimal(split(LATITUD_LONGITUD_B, ',')[2], 9, 6)) ~> latlongB",
						"brzLlamadas derive(FECHA_LIMPIA = toTimestamp(FECHA, 'dd-MM-yyyy HH:mm:ss')) ~> fecha",
						"latlongB sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          SERVICIO as string,",
						"          REGISTRO as string,",
						"          NUMERO_A as string,",
						"          IMEI_A as string,",
						"          RBS_UTILIZADA_A as string,",
						"          CELDA_A as string,",
						"          LATITUD_A as decimal(9,6),",
						"          LONGITUD_A as decimal(9,6),",
						"          NUMERO_B as string,",
						"          IMEI_B as string,",
						"          RBS_UTILIZADA_B as string,",
						"          CELDA_B as string,",
						"          LATITUD_B as decimal(9,6),",
						"          LONGITUD_B as decimal(9,6),",
						"          FECHA as timestamp,",
						"          DURACION as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          SERVICIO,",
						"          REGISTRO,",
						"          NUMERO_A,",
						"          IMEI_A,",
						"          RBS_UTILIZADA_A,",
						"          CELDA_A,",
						"          LATITUD_A,",
						"          LONGITUD_A,",
						"          NUMERO_B,",
						"          IMEI_B,",
						"          RBS_UTILIZADA_B,",
						"          CELDA_B,",
						"          LATITUD_B,",
						"          LONGITUD_B,",
						"          FECHA = FECHA_LIMPIA,",
						"          DURACION",
						"     )) ~> silverLlamadas"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_tabla_llamadas')]",
				"[concat(variables('factoryId'), '/datasets/ds_silver_llamadas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_dim_registro')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Gold"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_silver_llamadas",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_dim_registro",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          registro as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT DISTINCT\\nREGISTRO AS registro\\nFROM SILVER.llamadas',",
						"     format: 'query') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_registro as integer,",
						"          registro as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          registro",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_silver_llamadas')]",
				"[concat(variables('factoryId'), '/datasets/ds_dim_registro')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_dim_servicio')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Gold"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_silver_llamadas",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_dim_servicio",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          servicio as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT DISTINCT\\nSERVICIO AS servicio\\nFROM SILVER.llamadas',",
						"     format: 'query') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_servicio as integer,",
						"          servicio as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          servicio",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_silver_llamadas')]",
				"[concat(variables('factoryId'), '/datasets/ds_dim_servicio')]"
			]
		}
	]
}